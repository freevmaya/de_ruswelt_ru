@import "transform";
@import "border-radius";
@import "flex";

// Function unicode
@function unicode($str){

	@if none == $str {
		@return $str
	} @else {
		@return unquote("\"")+unquote(str-insert($str, "\\", 1))+unquote("\"")
	}
}

// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Reset list
@mixin reset-list {
	padding: 0;
	margin: 0;
	list-style: none;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Reset
@mixin reset-container {
	max-width: inherit;
	padding-left: 0;
	padding-right: 0;
}

// Box shadow
@mixin box-shadow {
	box-shadow: $box__shadow_mobile;

	@include media-breakpoint-up(md) {
		box-shadow: $box__shadow;
	}
}

// Clearfix
@mixin clearfix {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after {
	clear: both;
}

@mixin clearfix-full {
	&:before {
		@include clearfix;
	}
	&:after {
		@include clearfix;
		@include clearfix-after
	}
}

// .hentry
@mixin card {
	@include border-radius;
	overflow: hidden;
}

// Optional hyphenation
@mixin hyphens($mode: auto) {
	word-wrap: break-word;
	hyphens: $mode;
}

// Placeholder style
@mixin placeholder {
	&::-webkit-input-placeholder {
		@content;
	}
	&::-moz-placeholder{
		@content;
	}
	&:-ms-input-placeholder{
		@content;
	}
	&:-moz-placeholder{
		@content;
	}
}

// Resize anything
@mixin resizable($direction) {
	resize: $direction; // Options: horizontal, vertical, both
	overflow: auto; // Per CSS3 UI, `resize` only applies when `overflow` isn't `visible`
}

// tiles class
@mixin tiles( $class_name, $property, $ratio: 1, $breakpoints: $grid-breakpoints, $gutter: $grid-gutter-width, $columns: $grid-columns ) {
	.#{$class_name}{
		@each $breakpoint, $size in $breakpoints{
			@if $breakpoint!='xs' and $breakpoint!='sm' {
				@include media-breakpoint-up( $breakpoint ) {
					@if $property=='width' {
						width: percentage($ratio/$columns);
					} @else {
						$padding:($size - map-get($container-max-widths, $breakpoint))/2;
						#{$property}: #{($size - $padding)/$columns*$ratio};
					}
				}
			} @else {
				@include media-breakpoint-up( $breakpoint ) {
					@if $property=='width' {
						#{$property}: 100%;
					} @else {
						#{$property}: 300px;
					}
				}
			}
		}
	}
}

// Triangle
@mixin triangle($dir, $w, $h, $clr:#ccc) {
	width: 0;
	height: 0;
	border-style: solid;

	@if $dir == top {
		border-width: 0 $w/2 $h $w/2;
		border-color: transparent transparent $clr transparent;
	} @else if $dir == bottom {
		border-width: $h $w/2 0 $w/2;
		border-color: $clr transparent transparent transparent;
	} @else if $dir == left {
		border-width: $h/2 $w $h/2 0;
		border-color: transparent $clr transparent transparent;
	} @else if $dir == right {
		border-width: $h/2 0 $h/2 $w;
		border-color: transparent transparent transparent $clr;
	} @else if $dir == top_left {
		border-width: $h $w 0 0;
		border-color: $clr transparent transparent transparent;
	} @else if $dir == top_right {
		border-width: 0 $w $h 0;
		border-color: transparent $clr transparent transparent;
	} @else if $dir == bottom_right {
		border-width: 0 0 $h $w;
		border-color: transparent transparent $clr transparent;
	} @else if $dir == bottom_left {
		border-width: $h 0 0 $w;
		border-color: transparent transparent transparent $clr;
	}
}


// Opacity
@mixin opacity($opacity) {
	opacity: $opacity;
	// IE8 filter
	$opacity-ie: ($opacity * 100);
	filter: #{alpha(opacity=$opacity-ie)};
}


// Widgets area selectors
@mixin full-width-area( $parent-symbol:true ) {
	@if $parent-symbol {
		.full-width-header-area &,
		.after-content-full-width-area & {
			@content;
		}
	} @else {
		.full-width-header-area,
		.after-content-full-width-area {
			@content;
		}
	}
}

@mixin contents-area( $parent-symbol:true ) {
	@if $parent-symbol {
		.footer-area--fullwidth & {
			@content;
		}
	} @else {
		.footer-area--fullwidth {
			@content;
		}
	}
}

@mixin sidebars-area( $parent-symbol:true ) {
	@if $parent-symbol {
		.sidebar &,
		.footer-area:not(.footer-area--fullwidth) & {
			@content;
		}
	} @else {
		.sidebar,
		.footer-area:not(.footer-area--fullwidth) {
			@content;
		}
	}
}

// Custom grid indent
@mixin grid-indent( $indent: $grid-gutter-width/2, $child-indent-type: padding, $child-selector: '> *' ) {
	margin-left: - $indent;
	margin-right: - $indent;

	@if $child-indent-type==padding or $child-indent-type==margin {
		#{$child-selector} {
			#{$child-indent-type}-left: $indent;
			#{$child-indent-type}-right: $indent;
		}
	} @else {
		#{$child-selector} {
			padding-left: $indent;
			padding-right: $indent;
		}
	}
}

/*--------------------------------------------------------------
# Animation
--------------------------------------------------------------*/
@keyframes mortgates_spin {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}
